From f2145757700558a097da712d35187b0f43ec0617 Mon Sep 17 00:00:00 2001
From: Zongchun Yu <zongchun.yu@nxp.com>
Date: Wed, 13 May 2019 11:18:40 +0800
Subject: [PATCH] Add OTA support

Signed-off-by: mengkun.chen <mengkun.chen@nxp.com>
---
 board/freescale/ls1012ardb/ls1012ardb.c | 63 +++++++++++++++++++++++++++++++++
 board/freescale/ls1021atwr/ls1021atwr.c | 62 ++++++++++++++++++++++++++++++++
 board/freescale/ls1043ardb/ls1043ardb.c | 59 ++++++++++++++++++++++++++++++
 board/freescale/ls1046ardb/ls1046ardb.c | 61 +++++++++++++++++++++++++++++++
 board/freescale/ls1088a/ls1088a.c       | 61 +++++++++++++++++++++++++++++++
 board/freescale/ls2080ardb/ls2080ardb.c | 62 ++++++++++++++++++++++++++++++++
 board/freescale/lx2160a/lx2160a.c       | 60 +++++++++++++++++++++++++++++++
 configs/ls1012ardb_tfa_defconfig        |  1 +
 configs/ls1021atwr_nor_defconfig        |  1 +
 configs/ls1043ardb_tfa_defconfig        |  1 +
 configs/ls1046ardb_tfa_defconfig        |  1 +
 configs/ls1088ardb_tfa_defconfig        |  1 +
 configs/ls2088ardb_tfa_defconfig        |  1 +
 configs/lx2160ardb_tfa_defconfig        |  1 +
 include/configs/ls1012ardb.h            |  1 +
 include/configs/ls1021atwr.h            |  1 +
 include/configs/ls1043ardb.h            |  2 ++
 include/configs/ls1046ardb.h            |  1 +
 include/configs/ls1088ardb.h            |  1 +
 include/configs/ls2080ardb.h            |  1 +
 include/configs/lx2160ardb.h            |  1 +
 21 files changed, 443 insertions(+)

diff --git a/board/freescale/ls1012ardb/ls1012ardb.c b/board/freescale/ls1012ardb/ls1012ardb.c
index f648a90..2c91dcb 100644
--- a/board/freescale/ls1012ardb/ls1012ardb.c
+++ b/board/freescale/ls1012ardb/ls1012ardb.c
@@ -166,6 +166,69 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1012a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","run sdboot");
+       /* enable watchdog and set timeout to 34s */
+       //writew( 0x3420, WDOG1_BASE_ADDR);
+       return 0;
+}
+
+
 #ifdef CONFIG_TARGET_LS1012ARDB
 int esdhc_status_fixup(void *blob, const char *compat)
 {
diff --git a/board/freescale/ls1021atwr/ls1021atwr.c b/board/freescale/ls1021atwr/ls1021atwr.c
index 01ba1bc..00015a0 100644
--- a/board/freescale/ls1021atwr/ls1021atwr.c
+++ b/board/freescale/ls1021atwr/ls1021atwr.c
@@ -89,6 +89,68 @@ struct cpld_data {
 	u8 rev2;		/* Reserved */
 };
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1021a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","run sdboot");
+       /* enable watchdog and set timeout to 60s */
+       //writew( 0x3478, WDOG1_BASE_ADDR);
+       return 0;
+}
+
 #if !defined(CONFIG_QSPI_BOOT) && !defined(CONFIG_SD_BOOT_QSPI)
 static void cpld_show(void)
 {
diff --git a/board/freescale/ls1043ardb/ls1043ardb.c b/board/freescale/ls1043ardb/ls1043ardb.c
index c1d2085..5c9aa60 100644
--- a/board/freescale/ls1043ardb/ls1043ardb.c
+++ b/board/freescale/ls1043ardb/ls1043ardb.c
@@ -226,6 +226,65 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1043a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","cpld reset sd");
+    return 0;
+}
+
 int config_board_mux(void)
 {
 	struct ccsr_scfg *scfg = (struct ccsr_scfg *)CONFIG_SYS_FSL_SCFG_ADDR;
diff --git a/board/freescale/ls1046ardb/ls1046ardb.c b/board/freescale/ls1046ardb/ls1046ardb.c
index 0a73fe8..4a1a0b2 100644
--- a/board/freescale/ls1046ardb/ls1046ardb.c
+++ b/board/freescale/ls1046ardb/ls1046ardb.c
@@ -97,6 +97,67 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1046a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","cpld reset sd");
+    return 0;
+}
+
+
 int board_setup_core_volt(u32 vdd)
 {
 	bool en_0v9;
diff --git a/board/freescale/ls1088a/ls1088a.c b/board/freescale/ls1088a/ls1088a.c
index ab79855..2487619 100644
--- a/board/freescale/ls1088a/ls1088a.c
+++ b/board/freescale/ls1088a/ls1088a.c
@@ -12,6 +12,7 @@
 #include <fsl_sec.h>
 #include <asm/io.h>
 #include <fdt_support.h>
+#include <mmc.h>
 #include <linux/libfdt.h>
 #include <fsl-mc/fsl_mc.h>
 #include <environment.h>
@@ -543,6 +544,66 @@ int set_serdes_volt(int svdd)
 	return 1;
 }
 #else
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1088a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+    if(ota_sdboot_check())
+        env_set("bootcmd","qixis_reset sd");
+    return 0;
+}
+
 int get_serdes_volt(void)
 {
 	return 0;
diff --git a/board/freescale/ls2080ardb/ls2080ardb.c b/board/freescale/ls2080ardb/ls2080ardb.c
index af8186e..79fb071 100644
--- a/board/freescale/ls2080ardb/ls2080ardb.c
+++ b/board/freescale/ls2080ardb/ls2080ardb.c
@@ -12,6 +12,7 @@
 #include <asm/io.h>
 #include <hwconfig.h>
 #include <fdt_support.h>
+#include <mmc.h>
 #include <linux/libfdt.h>
 #include <fsl-mc/fsl_mc.h>
 #include <environment.h>
@@ -236,6 +237,67 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls2088a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","run sdboot");
+       return 0;
+}
+
 int board_early_init_f(void)
 {
 #ifdef CONFIG_SYS_I2C_EARLY_INIT
diff --git a/board/freescale/lx2160a/lx2160a.c b/board/freescale/lx2160a/lx2160a.c
index ad72eed..788d417 100644
--- a/board/freescale/lx2160a/lx2160a.c
+++ b/board/freescale/lx2160a/lx2160a.c
@@ -14,6 +14,7 @@
 #include <fsl_sec.h>
 #include <asm/io.h>
 #include <fdt_support.h>
+#include <mmc.h>
 #include <linux/libfdt.h>
 #include <fsl-mc/fsl_mc.h>
 #include <environment.h>
@@ -474,6 +475,65 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "lx2160a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+    if(ota_sdboot_check())
+        env_set("bootcmd","qixis_reset sd");
+    return 0;
+}
 void detail_board_ddr_info(void)
 {
 	int i;
diff --git a/configs/ls1012ardb_tfa_defconfig b/configs/ls1012ardb_tfa_defconfig
index 7e83be1..5da1add 100644
--- a/configs/ls1012ardb_tfa_defconfig
+++ b/configs/ls1012ardb_tfa_defconfig
@@ -57,3 +57,4 @@ CONFIG_DM_SCSI=y
 CONFIG_SATA_CEVA=y
 CONFIG_SCSI_AHCI=y
 CONFIG_SCSI=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1021atwr_nor_defconfig b/configs/ls1021atwr_nor_defconfig
index 2ffc50c..855b25d 100644
--- a/configs/ls1021atwr_nor_defconfig
+++ b/configs/ls1021atwr_nor_defconfig
@@ -56,3 +56,4 @@ CONFIG_SATA_CEVA=y
 CONFIG_SCSI_AHCI=y
 CONFIG_SCSI=y
 CONFIG_AHCI=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1043ardb_tfa_defconfig b/configs/ls1043ardb_tfa_defconfig
index 10a0169..161dcc1 100644
--- a/configs/ls1043ardb_tfa_defconfig
+++ b/configs/ls1043ardb_tfa_defconfig
@@ -49,3 +49,4 @@ CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_STORAGE=y
 CONFIG_DM_MMC=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1046ardb_tfa_defconfig b/configs/ls1046ardb_tfa_defconfig
index 1867443..b1b205d 100644
--- a/configs/ls1046ardb_tfa_defconfig
+++ b/configs/ls1046ardb_tfa_defconfig
@@ -54,3 +54,4 @@ CONFIG_SATA_CEVA=y
 CONFIG_SCSI_AHCI=y
 CONFIG_SCSI=y
 CONFIG_AHCI=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1088ardb_tfa_defconfig b/configs/ls1088ardb_tfa_defconfig
index dc367cb..be8f391 100644
--- a/configs/ls1088ardb_tfa_defconfig
+++ b/configs/ls1088ardb_tfa_defconfig
@@ -63,3 +63,4 @@ CONFIG_DM_SCSI=y
 CONFIG_SATA_CEVA=y
 CONFIG_SCSI=y
 CONFIG_AHCI=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls2088ardb_tfa_defconfig b/configs/ls2088ardb_tfa_defconfig
index 4b1c039..e4f19b7 100644
--- a/configs/ls2088ardb_tfa_defconfig
+++ b/configs/ls2088ardb_tfa_defconfig
@@ -72,3 +72,4 @@ CONFIG_SATA_CEVA=y
 CONFIG_SCSI_AHCI=y
 CONFIG_SCSI=y
 CONFIG_AHCI=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/lx2160ardb_tfa_defconfig b/configs/lx2160ardb_tfa_defconfig
index f6b20eb..dd927b4 100644
--- a/configs/lx2160ardb_tfa_defconfig
+++ b/configs/lx2160ardb_tfa_defconfig
@@ -83,3 +83,4 @@ CONFIG_EMC2305=y
 CONFIG_DM_SCSI=y
 CONFIG_SATA_CEVA=y
 CONFIG_AHCI=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/include/configs/ls1012ardb.h b/include/configs/ls1012ardb.h
index f6640fa..fd12d64 100644
--- a/include/configs/ls1012ardb.h
+++ b/include/configs/ls1012ardb.h
@@ -123,5 +123,6 @@
 #endif
 
 #include <asm/fsl_secure_boot.h>
+#define CONFIG_LAST_STAGE_INIT
 
 #endif /* __LS1012ARDB_H__ */
diff --git a/include/configs/ls1021atwr.h b/include/configs/ls1021atwr.h
index ba41000..5774b78 100644
--- a/include/configs/ls1021atwr.h
+++ b/include/configs/ls1021atwr.h
@@ -508,5 +508,6 @@
 
 #include <asm/fsl_secure_boot.h>
 #define CONFIG_SYS_BOOTM_LEN	(64 << 20) /* Increase max gunzip size */
+#define CONFIG_LAST_STAGE_INIT
 
 #endif
diff --git a/include/configs/ls1043ardb.h b/include/configs/ls1043ardb.h
index fe73e8b..dcf570f 100644
--- a/include/configs/ls1043ardb.h
+++ b/include/configs/ls1043ardb.h
@@ -311,6 +311,8 @@
 #define CONFIG_SCSI_DEV_LIST {SCSI_VEND_ID, SCSI_DEV_ID}
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
+
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS1043ARDB_H__ */
diff --git a/include/configs/ls1046ardb.h b/include/configs/ls1046ardb.h
index cc1f5f5..3301851 100644
--- a/include/configs/ls1046ardb.h
+++ b/include/configs/ls1046ardb.h
@@ -232,6 +232,7 @@
 #endif
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS1046ARDB_H__ */
diff --git a/include/configs/ls1088ardb.h b/include/configs/ls1088ardb.h
index 335135e..14cd06b 100644
--- a/include/configs/ls1088ardb.h
+++ b/include/configs/ls1088ardb.h
@@ -589,6 +589,7 @@
 #include <config_distro_bootcmd.h>
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS1088A_RDB_H */
diff --git a/include/configs/ls2080ardb.h b/include/configs/ls2080ardb.h
index 9b049c5..fb3b4c8 100644
--- a/include/configs/ls2080ardb.h
+++ b/include/configs/ls2080ardb.h
@@ -617,6 +617,7 @@ unsigned long get_board_sys_clk(void);
 #define CONFIG_PHY_AQUANTIA
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS2_RDB_H */
diff --git a/include/configs/lx2160ardb.h b/include/configs/lx2160ardb.h
index 7acd93c..1d888b0 100644
--- a/include/configs/lx2160ardb.h
+++ b/include/configs/lx2160ardb.h
@@ -110,6 +110,7 @@
 		" && esbc_validate ${kernelheader_addr_r};"	\
 		"bootm $load_addr#$BOARD\0"
 
+#define CONFIG_LAST_STAGE_INIT
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LX2_RDB_H */
-- 
2.7.4

