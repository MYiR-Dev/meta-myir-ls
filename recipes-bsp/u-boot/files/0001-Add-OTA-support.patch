From 75fab0349ae3fdc01965f26bf6e4872e245a8382 Mon Sep 17 00:00:00 2001
From: Chunrong Guo <chunrong.guo@nxp.com>
Date: Sun, 30 Sep 2018 14:26:55 +0800
Subject: [PATCH] Add OTA support

Signed-off-by: BJ DevOps Team <bjdevops@NXP1.onmicrosoft.com>
---
 board/freescale/ls1012ardb/ls1012ardb.c | 63 +++++++++++++++++++++++++++++++++
 board/freescale/ls1043ardb/ls1043ardb.c | 60 +++++++++++++++++++++++++++++++
 board/freescale/ls1046ardb/ls1046ardb.c | 61 +++++++++++++++++++++++++++++++
 board/freescale/ls1088a/ls1088a.c       | 61 +++++++++++++++++++++++++++++++
 board/freescale/ls2080ardb/ls2080ardb.c | 62 ++++++++++++++++++++++++++++++++
 configs/ls1012aqds_qspi_defconfig       |  1 +
 configs/ls1012ardb_qspi_defconfig       |  1 +
 configs/ls1043ardb_defconfig            |  1 +
 configs/ls1043ardb_sdcard_defconfig     |  1 +
 configs/ls1046ardb_qspi_defconfig       |  1 +
 configs/ls1088ardb_qspi_defconfig       |  1 +
 configs/ls2080ardb_defconfig            |  1 +
 include/configs/ls1012ardb.h            |  1 +
 include/configs/ls1043ardb.h            |  2 ++
 include/configs/ls1046ardb.h            |  1 +
 include/configs/ls1088ardb.h            |  1 +
 include/configs/ls2080ardb.h            |  1 +
 17 files changed, 320 insertions(+)

diff --git a/board/freescale/ls1012ardb/ls1012ardb.c b/board/freescale/ls1012ardb/ls1012ardb.c
index 4d4f6fb..775e6e1 100644
--- a/board/freescale/ls1012ardb/ls1012ardb.c
+++ b/board/freescale/ls1012ardb/ls1012ardb.c
@@ -153,6 +153,69 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1012a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","run sdboot");
+       /* enable watchdog and set timeout to 34s */
+       //writew( 0x3420, WDOG1_BASE_ADDR);
+       return 0;
+}
+
+
 #ifdef CONFIG_TARGET_LS1012ARDB
 int esdhc_status_fixup(void *blob, const char *compat)
 {
diff --git a/board/freescale/ls1043ardb/ls1043ardb.c b/board/freescale/ls1043ardb/ls1043ardb.c
index 9dc1cbc..6842e95 100644
--- a/board/freescale/ls1043ardb/ls1043ardb.c
+++ b/board/freescale/ls1043ardb/ls1043ardb.c
@@ -116,6 +116,66 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1043a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","cpld reset sd");
+    return 0;
+}
+
+
 int config_board_mux(void)
 {
 	struct ccsr_scfg *scfg = (struct ccsr_scfg *)CONFIG_SYS_FSL_SCFG_ADDR;
diff --git a/board/freescale/ls1046ardb/ls1046ardb.c b/board/freescale/ls1046ardb/ls1046ardb.c
index 33f1afd..3861d2a 100644
--- a/board/freescale/ls1046ardb/ls1046ardb.c
+++ b/board/freescale/ls1046ardb/ls1046ardb.c
@@ -97,6 +97,67 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1046a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","cpld reset sd");
+    return 0;
+}
+
+
 int board_setup_core_volt(u32 vdd)
 {
 	bool en_0v9;
diff --git a/board/freescale/ls1088a/ls1088a.c b/board/freescale/ls1088a/ls1088a.c
index e099048..cf447c1 100644
--- a/board/freescale/ls1088a/ls1088a.c
+++ b/board/freescale/ls1088a/ls1088a.c
@@ -13,6 +13,7 @@
 #include <fsl_sec.h>
 #include <asm/io.h>
 #include <fdt_support.h>
+#include <mmc.h>
 #include <linux/libfdt.h>
 #include <fsl-mc/fsl_mc.h>
 #include <environment.h>
@@ -412,6 +413,66 @@ int set_serdes_volt(int svdd)
 	return 1;
 }
 #else
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls1088a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+    if(ota_sdboot_check())
+        env_set("bootcmd","qixis_reset sd");
+    return 0;
+}
+
 int get_serdes_volt(void)
 {
 	return 0;
diff --git a/board/freescale/ls2080ardb/ls2080ardb.c b/board/freescale/ls2080ardb/ls2080ardb.c
index cd5e9e4..3613a60 100644
--- a/board/freescale/ls2080ardb/ls2080ardb.c
+++ b/board/freescale/ls2080ardb/ls2080ardb.c
@@ -13,6 +13,7 @@
 #include <asm/io.h>
 #include <hwconfig.h>
 #include <fdt_support.h>
+#include <mmc.h>
 #include <linux/libfdt.h>
 #include <fsl-mc/fsl_mc.h>
 #include <environment.h>
@@ -237,6 +238,67 @@ int board_init(void)
 	return 0;
 }
 
+struct OTA_parameter
+{
+       char status;
+       char str[0x200 - 1];
+};
+
+
+int ota_sdboot_check(void)
+{
+       struct mmc *mmc;
+       uint blk_start, blk_cnt;
+       unsigned long offset, size;
+       struct OTA_parameter data;
+       int dev = 0;
+       char platform[10];
+
+       offset  = 0x3F00000;
+       size    = 0x200;
+       mmc = find_mmc_device(dev);
+       if(mmc == NULL)
+               return 0;
+       if (mmc_init(mmc))
+               return 0;
+       struct blk_desc *desc = mmc_get_blk_desc(mmc);
+       blk_start   = ALIGN(offset, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_cnt     = ALIGN(size, mmc->read_bl_len) / mmc->read_bl_len;
+       blk_dread(desc, blk_start, blk_cnt, (uchar *)&data);
+
+       if( strstr(data.str, "ls2088a") == NULL ){
+               printf("sd card is not authenticated\n");
+               return 0;
+       }
+
+       printf("status=%c\n",data.status);
+       switch(data.status)
+       {
+               case '0':
+                       break;
+               case '1':
+                       data.status = '2';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       break;
+               case '2':
+                       data.status = '3';
+                       blk_dwrite(desc, blk_start, blk_cnt, (uchar *)&data);
+                       return 0;
+                       break;
+               default:
+                       return 0;
+                       break;
+       }
+       return 1;
+}
+
+int last_stage_init(void)
+{
+       if(ota_sdboot_check())
+               env_set("bootcmd","run sdboot");
+       return 0;
+}
+
 int board_early_init_f(void)
 {
 #ifdef CONFIG_SYS_I2C_EARLY_INIT
diff --git a/configs/ls1012aqds_qspi_defconfig b/configs/ls1012aqds_qspi_defconfig
index 25470cb..9007347 100644
--- a/configs/ls1012aqds_qspi_defconfig
+++ b/configs/ls1012aqds_qspi_defconfig
@@ -53,3 +53,4 @@ CONFIG_DM_USB=y
 CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_STORAGE=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1012ardb_qspi_defconfig b/configs/ls1012ardb_qspi_defconfig
index 1f62953..fc77490 100644
--- a/configs/ls1012ardb_qspi_defconfig
+++ b/configs/ls1012ardb_qspi_defconfig
@@ -48,3 +48,4 @@ CONFIG_DM_USB=y
 CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_STORAGE=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1043ardb_defconfig b/configs/ls1043ardb_defconfig
index 6f5204c..ce0cd61 100644
--- a/configs/ls1043ardb_defconfig
+++ b/configs/ls1043ardb_defconfig
@@ -39,3 +39,4 @@ CONFIG_DM_USB=y
 CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_STORAGE=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1043ardb_sdcard_defconfig b/configs/ls1043ardb_sdcard_defconfig
index a4c54a1..5a03267 100644
--- a/configs/ls1043ardb_sdcard_defconfig
+++ b/configs/ls1043ardb_sdcard_defconfig
@@ -54,3 +54,4 @@ CONFIG_DM_USB=y
 CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_STORAGE=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1046ardb_qspi_defconfig b/configs/ls1046ardb_qspi_defconfig
index 97bd8e4..b5a49dd 100644
--- a/configs/ls1046ardb_qspi_defconfig
+++ b/configs/ls1046ardb_qspi_defconfig
@@ -41,3 +41,4 @@ CONFIG_DM_USB=y
 CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_STORAGE=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls1088ardb_qspi_defconfig b/configs/ls1088ardb_qspi_defconfig
index d56f1db..1090410 100644
--- a/configs/ls1088ardb_qspi_defconfig
+++ b/configs/ls1088ardb_qspi_defconfig
@@ -47,3 +47,4 @@ CONFIG_USB_DWC3=y
 CONFIG_USB_STORAGE=y
 CONFIG_USB_GADGET=y
 CONFIG_EFI_LOADER_BOUNCE_BUFFER=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/configs/ls2080ardb_defconfig b/configs/ls2080ardb_defconfig
index de3ce13..5f1399c 100644
--- a/configs/ls2080ardb_defconfig
+++ b/configs/ls2080ardb_defconfig
@@ -48,3 +48,4 @@ CONFIG_USB_XHCI_HCD=y
 CONFIG_USB_XHCI_DWC3=y
 CONFIG_USB_STORAGE=y
 CONFIG_EFI_LOADER_BOUNCE_BUFFER=y
+CONFIG_LAST_STAGE_INIT=y
diff --git a/include/configs/ls1012ardb.h b/include/configs/ls1012ardb.h
index 442c95e..5af46eb 100644
--- a/include/configs/ls1012ardb.h
+++ b/include/configs/ls1012ardb.h
@@ -121,5 +121,6 @@
 			   "env exists secureboot && esbc_halt;"
 
 #include <asm/fsl_secure_boot.h>
+#define CONFIG_LAST_STAGE_INIT
 
 #endif /* __LS1012ARDB_H__ */
diff --git a/include/configs/ls1043ardb.h b/include/configs/ls1043ardb.h
index 06e2450..b02d8f4 100644
--- a/include/configs/ls1043ardb.h
+++ b/include/configs/ls1043ardb.h
@@ -292,6 +292,8 @@
 #define CONFIG_SCSI_DEV_LIST {SCSI_VEND_ID, SCSI_DEV_ID}
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
+
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS1043ARDB_H__ */
diff --git a/include/configs/ls1046ardb.h b/include/configs/ls1046ardb.h
index d63badf..1636fba 100644
--- a/include/configs/ls1046ardb.h
+++ b/include/configs/ls1046ardb.h
@@ -216,6 +216,7 @@
 #endif
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS1046ARDB_H__ */
diff --git a/include/configs/ls1088ardb.h b/include/configs/ls1088ardb.h
index 5752696..a806e44 100644
--- a/include/configs/ls1088ardb.h
+++ b/include/configs/ls1088ardb.h
@@ -468,6 +468,7 @@
 #include <config_distro_bootcmd.h>
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS1088A_RDB_H */
diff --git a/include/configs/ls2080ardb.h b/include/configs/ls2080ardb.h
index c8bb2ef..5089a58 100644
--- a/include/configs/ls2080ardb.h
+++ b/include/configs/ls2080ardb.h
@@ -492,6 +492,7 @@ unsigned long get_board_sys_clk(void);
 #define CONFIG_PHY_AQUANTIA
 #endif
 
+#define CONFIG_LAST_STAGE_INIT
 #include <asm/fsl_secure_boot.h>
 
 #endif /* __LS2_RDB_H */
-- 
2.7.4

